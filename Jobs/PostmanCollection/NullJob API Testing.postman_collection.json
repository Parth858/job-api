{
	"info": {
		"_postman_id": "d22a2f77-4909-4a86-b2e1-7e9b1598f8e3",
		"name": "NullJob API Testing",
		"description": "### What we do here?\n\n**SCENARIO**: Right now, we already have a null job portal, but this time we are moving forward with new changes, new ideas and new implementations and especially with null job portal. Our task is to implement a basic workflow for now, and also cover the same from security perspective.\n\n**INSPIRATION**: To learn, collaborate and enjoy most importantly\n\nObjects we have available right now\n\n1. Companies\n2. User\n3. Job\n    \n\n<img src=\"https://content.pstmn.io/5e509f53-6014-4ec9-9363-b2279fc70bb2/UGFzdGVkIGltYWdlIDIwMjMwODA2MDMxMzAxLnBuZw==\">\n\nGithub: [job-api]()\n\n### FROM HR Perspective\n\n**SCENARIO**: Let's suppose, I am an HR Intern, and I've been given a task to update company details which also include the job postings as well. So now, my task is to perform two things for which I'll be using _**NULL JOB PORTAL**_ to do so.\n\n1. Create Company\n2. Add Jobs\n3. Check how many users have applied for a specific job\n    \n\n### FROM JOB SEEKER Perspective\n\n**SCENARIO**: Anyone looking for a job related posts on the null job web portal, this person is different from the job provider, because job provider is allowed to posts about job, while this person is only able to see the jobs posted by the job provider.\n\n_**Things job seeker can do**_\n\n1. Discover jobs\n2. Apply for jobs\n3. Enhance its profile",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26451070"
	},
	"item": [
		{
			"name": "Jobs API",
			"item": [
				{
					"name": "Jobs API Testing (GET Req.)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/jobs/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"jobs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Jobs API Specific ID Testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/jobs/19d7cb277b3c44a5837735f5fa5b6eff",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"jobs",
								"19d7cb277b3c44a5837735f5fa5b6eff"
							]
						}
					},
					"response": []
				},
				{
					"name": "Jobs API User action testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/jobs/91fbcf869c80447f98a8b9e7b157d674/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"jobs",
								"91fbcf869c80447f98a8b9e7b157d674",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Jobs API Create Job",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"job_role\" : \"Software Engineer L2\",\n    \"location\" : \"Miami\",\n    \"post_date\" : \"2023-04-05\",\n    \"company\" : \"1c9e560f8053442b86c62265bc304435\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/jobs/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"jobs",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "- **LIST** all the available jobs  \n    API Endpoint: `/api/v1/jobs`  \n    METHOD: `GET`\n    \n\n- **GET** details for a specific job  \n    API Endpoint: `/api/v1/jobs/{job_id}`  \n    METHOD: `GET`\n    \n\n- **GET** number of users applied for a specific job  \n    API Endpoint: `/api/v1/jobs/{job_id}/user`  \n    METHOD: `GET`  \n    Usually we get a key called \"Number of applications\" which shows number of people  \n    applied for this job.\n    \n\n- **CREATE** a job  \n    API Endpoint: `/api/v1/jobs/`  \n    METHOD: `POST`"
		},
		{
			"name": "User API",
			"item": [
				{
					"name": "User API Testing (GET Req.)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"user",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "User API Specific ID Testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/user/66a5329c1e564c4c8d1a66f23331a3d0",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"user",
								"66a5329c1e564c4c8d1a66f23331a3d0"
							]
						}
					},
					"response": []
				},
				{
					"name": "User API Jobs action testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/user/66a5329c1e564c4c8d1a66f23331a3d0/jobs",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"user",
								"66a5329c1e564c4c8d1a66f23331a3d0",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "User API Create User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\" : \"Harsh verma\",\n    \"email\" : \"verma.harsh@gmail.com\",\n    \"address\" : \"Whitefield, Bangalore NEW\",\n    \"job\": \"19d7cb277b3c44a5837735f5fa5b6eff\",\n    \"company\": \"2f25aeba44c04135abdeb860389f27e7\",\n    \"about\": \"Associate auditor @ KPMG\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"user",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "List of available functionalities for the USER API    \n    \n* LIST all the users\n   API Endpoint: `/api/v1/user/` \n   METHOD: GET    \n    \n    \n* GET specific user details    \n   API Endpoint: `/api/v1/user/{user_id}`\n   METHOD: GET\n    \n    \n* GET Jobs applied by a specific user\n   API Endpoint: `/api/v1/user/{user_id}/jobs`\n   METHOD: GET\n    \n    \n* CREATE users\n   API Endpoint: `/api/v1/user/`\n   METHOD: POST\n\n\n* UPDATE users\n   API Endpoint: `/api/v1/user/`\n   METHOD: PUT\n"
		},
		{
			"name": "Company API",
			"item": [
				{
					"name": "Company API Testing (GET)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/company/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"company",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Company API Specific ID Testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/company/974251b2cef741ecb4145a101af2b2c9",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"company",
								"974251b2cef741ecb4145a101af2b2c9"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company API Jobs action testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/company/jobs",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"company",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company API User action testing",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/company/users",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"company",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Company API Create company",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Amazon\",\n    \"location\": \"Texas, Houston, USA\",\n    \"about\": \"Amazon.com, Inc. is an American multinational technology company focusing on e-commerce, cloud computing, online advertising, digital streaming.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:1234/api/v1/company/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "1234",
							"path": [
								"api",
								"v1",
								"company",
								""
							]
						}
					},
					"response": []
				}
			],
			"description": "- **LIST** all the available companies  \n    API Endpoint: `/api/v1/company/`  \n    METHOD: GET\n    1. In the companies data, show number of applicants as well\n\n- **GET** details for a specific job  \n    API Endpoint: `/api/v1/company/{company_id}`  \n    METHOD: GET\n    \n\n- **GET** number of **jobs** available in the company  \n    API Endpoint: `/api/v1/company/jobs`  \n    METHOD: GET\n    \n\n- **GET** number of **user** available in the company  \n    API Endpoint: `/api/v1/company/user`  \n    METHOD: GET\n    \n\n- **CREATE** company  \n    API Endpoint: `/api/v1/company/`  \n    METHOD: POST"
		}
	]
}